[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Téncicas Matemáticas en Bioinformática",
    "section": "",
    "text": "Prefacio\n¡Bienvenido al manual de Bioinformática!\nEste libro presenta una recopilación técnicas matemáticas y estadísticas aplicadas en Bioinformática. Muchas de estas técnicas están ilustradas con ejemplos y están implementadas en distintos lenguajes de programación como R, Python o Julia."
  },
  {
    "objectID": "index.html#capítulos",
    "href": "index.html#capítulos",
    "title": "Téncicas Matemáticas en Bioinformática",
    "section": "Capítulos",
    "text": "Capítulos\n\n\n\n\n\n\n\nAnálisis de expresión génica diferencial (RNA-Seq)\n\n\n\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "index.html#licencia",
    "href": "index.html#licencia",
    "title": "Téncicas Matemáticas en Bioinformática",
    "section": "Licencia",
    "text": "Licencia\nEsta obra está bajo una licencia Reconocimiento – No comercial – Compartir bajo la misma licencia 3.0 España de Creative Commons. Para ver una copia de esta licencia, visite https://creativecommons.org/licenses/by-nc-sa/3.0/es/.\nCon esta licencia eres libre de:\n\nCopiar, distribuir y mostrar este trabajo.\nRealizar modificaciones de este trabajo.\n\nBajo las siguientes condiciones:\n\nReconocimiento. Debe reconocer los créditos de la obra de la manera especificada por el autor o el licenciador (pero no de una manera que sugiera que tiene su apoyo o apoyan el uso que hace de su obra).\nNo comercial. No puede utilizar esta obra para fines comerciales.\nCompartir bajo la misma licencia. Si altera o transforma esta obra, o genera una obra derivada, sólo puede distribuir la obra generada bajo una licencia idéntica a ésta.\n\nAl reutilizar o distribuir la obra, tiene que dejar bien claro los términos de la licencia de esta obra.\nEstas condiciones pueden no aplicarse si se obtiene el permiso del titular de los derechos de autor.\nNada en esta licencia menoscaba o restringe los derechos morales del autor."
  },
  {
    "objectID": "01-rna-seq.html#análisis-de-expresión-génica-diferencial-con-edger",
    "href": "01-rna-seq.html#análisis-de-expresión-génica-diferencial-con-edger",
    "title": "1  Análisis de expresión génica diferencial (RNA-Seq)",
    "section": "1.1 Análisis de expresión génica diferencial con EdgeR",
    "text": "1.1 Análisis de expresión génica diferencial con EdgeR\n\n1.1.1 Estructura de datos\nEl paquete EdgeR utiliza la estructura de datos DGEList para guardar la matriz de frecuencias de expresión génica. Para crear esta estructura se utiliza la función\n\nDGEList(frec, group = grupo): Crea una estructura del tipo DGEList con la matriz de frecuencias de expresión génica frec (con genes en filas y muestras en columnas) y el vector grupo con los grupos experimentales a los que pertenecen las muestras analizadas en las columnas de la matriz de frecuencias.\n\n\nlibrary(edgeR)\nlibrary(DEFormats)\nfrec &lt;- simulateRnaSeqData()\ngrupo &lt;- rep(c(\"A\", \"B\"), each = 3)\ndge &lt;- DGEList(frec, group = grupo)\ndge\n\nAn object of class \"DGEList\"\n$counts\n      sample1 sample2 sample3 sample4 sample5 sample6\ngene1      85      76     103     107     140     124\ngene2       1       6      11       6       1       4\ngene3      80      98      39      82      97     113\ngene4      92      83      59      85     100      98\ngene5      36      24      18      50      22      15\n995 more rows ...\n\n$samples\n        group lib.size norm.factors\nsample1     A    42832            1\nsample2     A    40511            1\nsample3     A    39299            1\nsample4     B    43451            1\nsample5     B    40613            1\nsample6     B    43662            1\n\n\nEsta estructura de datos es una lista con dos atributos. El atributo counts contiene la matriz de frecuencias de expresión génica, y el atributo samples es un data frame información sobre las muestras estudiadas. Cada fila de este data frame se corresponde con una columna de la matriz de frecuencias y contiene las siguientes columnas\n\n\n\n\n\n\n\nColumna\nDescripción\n\n\n\n\ngroup\nGrupo experimental al que pertenece la muestra.\n\n\nlib.size\ntamaño de la librería (suma de frecuencias de la muestra).\n\n\nnorm.factors\nFactor de normalización.\n\n\n\nLa estructura de datos DGEList puede contener opcionalmente el atributo genes con anotaciones de los genes observados en las filas de la matriz de frecuencias.\nPara convertir esta estructura de datos en una del tipo DESeqDataSet se puede utilizar la función as.DESeqDataSet del paquete DEFormats.\n\ndds &lt;- as.DESeqDataSet(dge)\ndds\n\nclass: DESeqDataSet \ndim: 1000 6 \nmetadata(1): version\nassays(1): counts\nrownames(1000): gene1 gene2 ... gene999 gene1000\nrowData names(0):\ncolnames(6): sample1 sample2 ... sample5 sample6\ncolData names(3): group lib.size norm.factors\n\n\n\nEjemplo 1.1 Veamos cómo crear la estructura de datos correspondiente al estudio de Sheridan JM, et al. (2015) donde se obtuvieron datos de tres poblaciones de células (basal, progenitor luminal (LP) y luminal maduro (ML)) seleccionadas de las glándulas mamarias de ratones vírgenes hembra, cada una por triplicado. Los datos pueden obtenerse del repositorio Gene Expression Omnibus (GEO) mediante el identificador GSE63310.\nEn primer lugar descargamos los ficheros con las librerías de frecuencias.\n\n# Descarga de datos\nurl &lt;- \"https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE63310&format=file\"\nutils::download.file(url, destfile=\"datos/GSE63310_RAW.tar\", mode=\"wb\") \nutils::untar(\"datos/GSE63310_RAW.tar\", exdir = \"datos\")\nfiles &lt;- paste0(\"datos/\", c(\"GSM1545535_10_6_5_11.txt\", \"GSM1545536_9_6_5_11.txt\", \"GSM1545538_purep53.txt\",\n  \"GSM1545539_JMS8-2.txt\", \"GSM1545540_JMS8-3.txt\", \"GSM1545541_JMS8-4.txt\",\n  \"GSM1545542_JMS8-5.txt\", \"GSM1545544_JMS9-P7c.txt\", \"GSM1545545_JMS9-P8c.txt\"))\n#for(i in paste0(\"datos/\", files, \".gz\"))\n#  R.utils::gunzip(i, overwrite=TRUE)\n\nA continuación creamos la estructura de datos DGEList.\n\n# Creación de la estructura de datos DGEList\ndge &lt;- readDGE(files, columns=c(1,3))\ndge\n\nAn object of class \"DGEList\"\n$samples\n                                                    files group lib.size\ndatos/GSM1545535_10_6_5_11 datos/GSM1545535_10_6_5_11.txt     1 32863052\ndatos/GSM1545536_9_6_5_11   datos/GSM1545536_9_6_5_11.txt     1 35335491\ndatos/GSM1545538_purep53     datos/GSM1545538_purep53.txt     1 57160817\ndatos/GSM1545539_JMS8-2       datos/GSM1545539_JMS8-2.txt     1 51368625\ndatos/GSM1545540_JMS8-3       datos/GSM1545540_JMS8-3.txt     1 75795034\ndatos/GSM1545541_JMS8-4       datos/GSM1545541_JMS8-4.txt     1 60517657\ndatos/GSM1545542_JMS8-5       datos/GSM1545542_JMS8-5.txt     1 55086324\ndatos/GSM1545544_JMS9-P7c   datos/GSM1545544_JMS9-P7c.txt     1 21311068\ndatos/GSM1545545_JMS9-P8c   datos/GSM1545545_JMS9-P8c.txt     1 19958838\n                           norm.factors\ndatos/GSM1545535_10_6_5_11            1\ndatos/GSM1545536_9_6_5_11             1\ndatos/GSM1545538_purep53              1\ndatos/GSM1545539_JMS8-2               1\ndatos/GSM1545540_JMS8-3               1\ndatos/GSM1545541_JMS8-4               1\ndatos/GSM1545542_JMS8-5               1\ndatos/GSM1545544_JMS9-P7c             1\ndatos/GSM1545545_JMS9-P8c             1\n\n$counts\n           Samples\nTags        datos/GSM1545535_10_6_5_11 datos/GSM1545536_9_6_5_11\n  497097                             1                         2\n  100503874                          0                         0\n  100038431                          0                         0\n  19888                              0                         1\n  20671                              1                         1\n           Samples\nTags        datos/GSM1545538_purep53 datos/GSM1545539_JMS8-2\n  497097                         342                     526\n  100503874                        5                       6\n  100038431                        0                       0\n  19888                            0                       0\n  20671                           76                      40\n           Samples\nTags        datos/GSM1545540_JMS8-3 datos/GSM1545541_JMS8-4\n  497097                          3                       3\n  100503874                       0                       0\n  100038431                       0                       0\n  19888                          17                       2\n  20671                          33                      14\n           Samples\nTags        datos/GSM1545542_JMS8-5 datos/GSM1545544_JMS9-P7c\n  497097                        535                         2\n  100503874                       5                         0\n  100038431                       1                         0\n  19888                           0                         1\n  20671                          98                        18\n           Samples\nTags        datos/GSM1545545_JMS9-P8c\n  497097                            0\n  100503874                         0\n  100038431                         0\n  19888                             0\n  20671                             8\n27174 more rows ...\n\n\nAñadimos la información del diseño experimental, en este caso el grupo experimental y el lote, al data frame de las muestras.\n\ncolnames(dge) &lt;- substring(colnames(dge), 18, nchar(colnames(dge)))\n# Añadimos el grupo experimental\ndge$samples$group &lt;- as.factor(c(\"LP\", \"ML\", \"Basal\", \"Basal\", \"ML\", \"LP\", \n                     \"Basal\", \"ML\", \"LP\"))\n# Añadimos el lote\ndge$samples$lane &lt;- as.factor(rep(c(\"L004\",\"L006\",\"L008\"), c(3,4,2)))\ndge\n\nAn object of class \"DGEList\"\n$samples\n                                   files group lib.size norm.factors lane\n10_6_5_11 datos/GSM1545535_10_6_5_11.txt    LP 32863052            1 L004\n9_6_5_11   datos/GSM1545536_9_6_5_11.txt    ML 35335491            1 L004\npurep53     datos/GSM1545538_purep53.txt Basal 57160817            1 L004\nJMS8-2       datos/GSM1545539_JMS8-2.txt Basal 51368625            1 L006\nJMS8-3       datos/GSM1545540_JMS8-3.txt    ML 75795034            1 L006\nJMS8-4       datos/GSM1545541_JMS8-4.txt    LP 60517657            1 L006\nJMS8-5       datos/GSM1545542_JMS8-5.txt Basal 55086324            1 L006\nJMS9-P7c   datos/GSM1545544_JMS9-P7c.txt    ML 21311068            1 L008\nJMS9-P8c   datos/GSM1545545_JMS9-P8c.txt    LP 19958838            1 L008\n\n$counts\n           Samples\nTags        10_6_5_11 9_6_5_11 purep53 JMS8-2 JMS8-3 JMS8-4 JMS8-5 JMS9-P7c\n  497097            1        2     342    526      3      3    535        2\n  100503874         0        0       5      6      0      0      5        0\n  100038431         0        0       0      0      0      0      1        0\n  19888             0        1       0      0     17      2      0        1\n  20671             1        1      76     40     33     14     98       18\n           Samples\nTags        JMS9-P8c\n  497097           0\n  100503874        0\n  100038431        0\n  19888            0\n  20671            8\n27174 more rows ...\n\n\nA continuación anotamos los genes de las filas de la matriz de frecuencias. Para ello debe utilizarse un paquete específico para el genoma de la especie de donde proviene el RNA (Mus.muculus en este caso para el genoma del ratón).\n\nlibrary(Mus.musculus)\ngeneid &lt;- rownames(dge)\ngenes &lt;- select(Mus.musculus, keys = geneid, columns = c(\"SYMBOL\", \"TXCHROM\"), keytype = \"ENTREZID\")\n# Eliminamos duplicidad de algunos genes\ngenes &lt;- genes[!duplicated(genes$ENTREZID),]\ndge$genes &lt;- genes\ndge\n\nAn object of class \"DGEList\"\n$samples\n                                   files group lib.size norm.factors lane\n10_6_5_11 datos/GSM1545535_10_6_5_11.txt    LP 32863052            1 L004\n9_6_5_11   datos/GSM1545536_9_6_5_11.txt    ML 35335491            1 L004\npurep53     datos/GSM1545538_purep53.txt Basal 57160817            1 L004\nJMS8-2       datos/GSM1545539_JMS8-2.txt Basal 51368625            1 L006\nJMS8-3       datos/GSM1545540_JMS8-3.txt    ML 75795034            1 L006\nJMS8-4       datos/GSM1545541_JMS8-4.txt    LP 60517657            1 L006\nJMS8-5       datos/GSM1545542_JMS8-5.txt Basal 55086324            1 L006\nJMS9-P7c   datos/GSM1545544_JMS9-P7c.txt    ML 21311068            1 L008\nJMS9-P8c   datos/GSM1545545_JMS9-P8c.txt    LP 19958838            1 L008\n\n$counts\n           Samples\nTags        10_6_5_11 9_6_5_11 purep53 JMS8-2 JMS8-3 JMS8-4 JMS8-5 JMS9-P7c\n  497097            1        2     342    526      3      3    535        2\n  100503874         0        0       5      6      0      0      5        0\n  100038431         0        0       0      0      0      0      1        0\n  19888             0        1       0      0     17      2      0        1\n  20671             1        1      76     40     33     14     98       18\n           Samples\nTags        JMS9-P8c\n  497097           0\n  100503874        0\n  100038431        0\n  19888            0\n  20671            8\n27174 more rows ...\n\n$genes\n   ENTREZID  SYMBOL TXCHROM\n1    497097    Xkr4    chr1\n2 100503874 Gm19938    &lt;NA&gt;\n3 100038431 Gm10568    &lt;NA&gt;\n4     19888     Rp1    chr1\n5     20671   Sox17    chr1\n27174 more rows ...\n\n\n\n\n\n1.1.2 Preprocesamiento\nUna vez preparada la estructura de datos, el siguiente paso es el preprocesamiento de datos. Normalmente comprende las siguientes tareas:\n\nNormalización de las frecuencias.\nEliminación de los genes con poca expresión.\nNormalización de las distribuciones de frecuencias de expresión génicas.\n\n\n1.1.2.1 Normalización de las frecuencias\nEl objetivo principal es normalizar las frecuencias de expresión génica para eliminar el efecto sobre las frecuencias de factores como la profundidad de secuenciado (a mayor profundidad de secuenciado mayores frecuencias) o el tamaño de los genes (a mayor tamaño mayores frecuencias). Generalmente se usan las siguientes transformaciones\n\nFrecuencias por millón (CPM). Se divide cada frecuencia por el tamaño en millones de la librería de la muestra a la que pertenece. Se realiza con la función cpm(dge).\nLogaritmo en base 2 de las frecuencias por millón (log2-CPM). Se calcula a partir de la anterior mediante la fórmula \\(\\log_2(CPM+\\frac{2}{L})\\), donde \\(L\\) es la longitud media de las librerías en millones. El término \\(\\frac{2}{L}\\) que se añade permite calcular el logaritmo para frecuencias nulas (ya que el logaritmo de 0 no existe). Se realiza con la función cmp(dge, log = TRUE).\nLecturas por kilobase de transcripción por millón (RPKM): Se realiza con la función rpkm(dge, longitud_genes) pasando la longitud de los genes.\nFragmentos por kilobase de transcripción por millón (FPKM).\n\nLas dos primeras no tienen en cuenta el tamaño de los genes, pero suelen usarse para la expresión génica diferencial donde el tamaño de los genes se supone constante en las distintas muestras.\n\nEjemplo 1.2 Siguiendo con el ejemplo anterior, calculamos las frecuencias por millón y el logaritmo de las frecuencias por millón.\n\ncpm &lt;- cpm(dge)\nsummary(cpm)\n\n   10_6_5_11            9_6_5_11            purep53             JMS8-2        \n Min.   :    0.000   Min.   :    0.000   Min.   :   0.000   Min.   :   0.000  \n 1st Qu.:    0.000   1st Qu.:    0.000   1st Qu.:   0.000   1st Qu.:   0.000  \n Median :    0.578   Median :    0.736   Median :   0.892   Median :   0.895  \n Mean   :   36.793   Mean   :   36.793   Mean   :  36.793   Mean   :  36.793  \n 3rd Qu.:   19.536   3rd Qu.:   23.546   3rd Qu.:  24.221   3rd Qu.:  23.341  \n Max.   :27807.947   Max.   :11546.719   Max.   :7951.408   Max.   :7389.433  \n     JMS8-3             JMS8-4              JMS8-5            JMS9-P7c       \n Min.   :   0.000   Min.   :    0.000   Min.   :   0.000   Min.   :   0.000  \n 1st Qu.:   0.000   1st Qu.:    0.000   1st Qu.:   0.000   1st Qu.:   0.000  \n Median :   0.699   Median :    0.711   Median :   0.908   Median :   0.845  \n Mean   :  36.793   Mean   :   36.793   Mean   :  36.793   Mean   :  36.793  \n 3rd Qu.:  23.827   3rd Qu.:   19.928   3rd Qu.:  21.439   3rd Qu.:  24.260  \n Max.   :7955.680   Max.   :29572.361   Max.   :9376.973   Max.   :7865.350  \n    JMS9-P8c        \n Min.   :    0.000  \n 1st Qu.:    0.000  \n Median :    0.752  \n Mean   :   36.793  \n 3rd Qu.:   21.594  \n Max.   :16500.710  \n\nlcpm &lt;- cpm(dge, log = TRUE)\nsummary(lcpm)\n\n   10_6_5_11          9_6_5_11          purep53             JMS8-2       \n Min.   :-4.5074   Min.   :-4.5074   Min.   :-4.50743   Min.   :-4.5074  \n 1st Qu.:-4.5074   1st Qu.:-4.5074   1st Qu.:-4.50743   1st Qu.:-4.5074  \n Median :-0.6847   Median :-0.3589   Median :-0.09513   Median :-0.0901  \n Mean   : 0.1714   Mean   : 0.3312   Mean   : 0.43559   Mean   : 0.4089  \n 3rd Qu.: 4.2913   3rd Qu.: 4.5601   3rd Qu.: 4.60081   3rd Qu.: 4.5475  \n Max.   :14.7632   Max.   :13.4952   Max.   :12.95700   Max.   :12.8513  \n     JMS8-3            JMS8-4            JMS8-5            JMS9-P7c      \n Min.   :-4.5074   Min.   :-4.5074   Min.   :-4.50743   Min.   :-4.5074  \n 1st Qu.:-4.5074   1st Qu.:-4.5074   1st Qu.:-4.50743   1st Qu.:-4.5074  \n Median :-0.4281   Median :-0.4064   Median :-0.07152   Median :-0.1704  \n Mean   : 0.3225   Mean   : 0.2529   Mean   : 0.40428   Mean   : 0.3708  \n 3rd Qu.: 4.5772   3rd Qu.: 4.3199   3rd Qu.: 4.42513   3rd Qu.: 4.6031  \n Max.   :12.9578   Max.   :14.8520   Max.   :13.19491   Max.   :12.9413  \n    JMS9-P8c      \n Min.   :-4.5074  \n 1st Qu.:-4.5074  \n Median :-0.3300  \n Mean   : 0.2749  \n 3rd Qu.: 4.4355  \n Max.   :14.0102  \n\n\n\n\n\n1.1.2.2 Eliminación de genes con poca expresión\nAunque el objetivo del análisis de la expresión génica diferencial es detectar los genes que se expresan en un grupo experimental en comparación con los otros, cuando un gen no se expresa en ninguna de las muestras no tiene interés para el estudio y puede eliminarse.\nExisten diferentes criterios para eliminar los genes con poca expresión. El paquete EdgeR incorpora la siguiente función\n\nfilterByExpr(dge): Realiza un filtro de la estructura de datos dge los genes con poca expresión. Por defecto devuelve TRUE para cualquier gen con una frecuencia mayor o igual que 10 en al menos un número de muestras igual al del menor grupo experimental.\n\n\nEjemplo 1.3 Veamos cuántos genes no tienen expresión en ninguna muestra del ejemplo anterior.\n\n# Número de genes con expresión nula.\ntable(rowSums(dge$counts) == 0)\n\n\nFALSE  TRUE \n22026  5153 \n\n\nEl siguiente gráfico muestra la distribución del logaritmo en base 2 de las frecuencias por millón.\n\n# Definimos una función para dibujar la distribución del logaritmo de las frecuencias por millón.\ndist_logcpm &lt;- function(lcpm) {\nlcpm |&gt; \n    as.tibble()  |&gt;\n    pivot_longer(everything(), names_to = \"Muestra\", values_to = \"LogCPM\") |&gt;\n    ggplot(aes(x = LogCPM, color = Muestra)) +\n    geom_density() +\n    labs(title = \"Distribución del logaritmo en base 2 de las frecuencias por millón\")\n}\n\ndist_logcpm(lcpm)\n\nWarning: `as.tibble()` was deprecated in tibble 2.0.0.\nℹ Please use `as_tibble()` instead.\nℹ The signature and semantics have changed, see `?as_tibble`.\n\n\n\n\n\nComo se observa ha una porcentaje significativo de genes que tiene una expresión muy baja (valores negativos).\nA continuación eliminamos de la estructura de datos los genes con poca expresión.\n\nfiltro &lt;- filterByExpr(dge)\ndge &lt;- dge[filtro, , keep.lib.sizes = F]\ndge\n\nAn object of class \"DGEList\"\n$samples\n                                   files group lib.size norm.factors lane\n10_6_5_11 datos/GSM1545535_10_6_5_11.txt    LP 32857304            1 L004\n9_6_5_11   datos/GSM1545536_9_6_5_11.txt    ML 35328624            1 L004\npurep53     datos/GSM1545538_purep53.txt Basal 57147943            1 L004\nJMS8-2       datos/GSM1545539_JMS8-2.txt Basal 51356800            1 L006\nJMS8-3       datos/GSM1545540_JMS8-3.txt    ML 75782871            1 L006\nJMS8-4       datos/GSM1545541_JMS8-4.txt    LP 60506774            1 L006\nJMS8-5       datos/GSM1545542_JMS8-5.txt Basal 55073018            1 L006\nJMS9-P7c   datos/GSM1545544_JMS9-P7c.txt    ML 21305254            1 L008\nJMS9-P8c   datos/GSM1545545_JMS9-P8c.txt    LP 19955335            1 L008\n\n$counts\n        Samples\nTags     10_6_5_11 9_6_5_11 purep53 JMS8-2 JMS8-3 JMS8-4 JMS8-5 JMS9-P7c\n  497097         1        2     342    526      3      3    535        2\n  20671          1        1      76     40     33     14     98       18\n  27395        431      771    1368   1268   1564    769    818      468\n  18777        768     1722    2517   1923   3865   1888   1830     1246\n  21399        810      977    2472   1870   2251   1716   1932      756\n        Samples\nTags     JMS9-P8c\n  497097        0\n  20671         8\n  27395       342\n  18777       693\n  21399       619\n16619 more rows ...\n\n$genes\n  ENTREZID SYMBOL TXCHROM\n1   497097   Xkr4    chr1\n5    20671  Sox17    chr1\n6    27395 Mrpl15    chr1\n7    18777 Lypla1    chr1\n9    21399  Tcea1    chr1\n16619 more rows ...\n\n\n\nlcpm &lt;- cpm(dge, log = TRUE)\ndist_logcpm(lcpm)\n\n\n\n\n\n\n\n1.1.2.3 Normalización de las distribuciones de frecuencias de expresión génicas\nDurante el proceso de secuenciación puede haber factores externos no biológicos que afecten a la expresión de los genes. Por ejemplo, la muestras del primer lote pueden tener mayores frecuencias que las del segundo lote. Como se supone que las muestras replicadas deben tener un rango y una distribución de frecuencias similares, en esta etapa se aplica otro procedimiento de normalización para garantizar que la distribución de frecuencias de cada muestra es similar. Para ello el paquete edgeR utiliza el método de las medias recortadas de los valores M por medio de la función\n\ncalcNormFactors(dge, method = \"TMM\"): Calcular los factores de escalado del tamaño de las librerías de cada muestra. Estos factores se guardan automáticamente en el data frame con la información de las muestras dge$samples.\n\n\nEjemplo 1.4 Siguiendo con el mismo ejemplo, calculamos los factores de escalado para cada muestra.\n\ndge &lt;- calcNormFactors(dge, method = \"TMM\")\ndge$samples$norm.factors\n\n[1] 0.8943956 1.0250186 1.0459005 1.0458455 1.0162707 0.9217132 0.9961959\n[8] 1.0861026 0.9839203\n\n\nA continuación se muestran los diagramas de cajas de las distribuciones normalizadas tras aplicar los factores de escalado.\n\nbox_logcpm &lt;- function(lcpm){\nlcpm |&gt; \n    as.tibble()  |&gt;\n    pivot_longer(everything(), names_to = \"Muestra\", values_to = \"LogCPM\") |&gt;\n    ggplot(aes(x = Muestra, y = LogCPM, fill = Muestra)) +\n    geom_boxplot() +\n    labs(title = \"Distribución del logaritmo en base 2 de las frecuencias por millón\")\n}\n\nbox_logcpm(lcpm)\n\n\n\n\nComo se puede apreciar, después de la normalización, todas las muestras presentan una distribución de frecuencias similar.\n\n\n\n\n1.1.3 Análisis exploratorio\nUna vez preprocesados los datos comienza el análiss estadístico propiamente dicho. En una primera fase se suele realizar un análisis exploratorio de los datos que suele incluir los siguientes análisis:\n\nEscalado multidimensional (análisis de componentes principales).\n\n\n1.1.3.1 Escalado multidimensional\nEl escalado multidimensional mediante componente principales permite ver qué muestras son similares en cuando a la distribución de frecuencias de expresión génica. Los componentes principales son combinaciones lineales de los genes de la matriz de frecuencias que son ortogonales entre sí. El primer componente principal recoge la dimensión con mayor variabilidad de las frecuencias. El segundo recoge la dimensión don la mayor variabilidad no explicada por el primer componente principal y así sucesivamente. Normalmente los dos primeros componentes principales suelen recoger un porcentaje bastante alto de la variabilidad de las frecuencias. Al representar las muestras en estas dos dimensiones, las muestras más próximas entre sí, presentan una distribución de frecuencias de expresión génica similar. Para realizar esta representación se puede utilizar la siguiente función del paquete limma:\n\nplotMDS(dge): Realiza un diagrama de componentes principales de la matriz de frecuencias de la estructura de datosdge`.\n\nAlternativamente, se pueden calcular los componentes principales mediante la función prcomp del paquete stats y luego usar la función autoplot del paquete ggfortify para dibujar el diagrama de componentes principales.\n\nEjemplo 1.5 A continuación se muestra cómo obtener el diagrama de componentes principales de la matriz de frecuencias de nuestro ejemplo.\n\nplotMDS(dge, col = as.numeric(dge$samples$group), main = \"Diagrama de componentes principales del logaritmo en base 2 de las frecuencias por millón\")\n\n\n\n\n\nlibrary(ggfortify)\nautoplot(prcomp(t(lcpm)), data = dge$samples, color = \"group\", loadings = TRUE, loadings.label = TRUE) +\nlabs(title = \"Diagrama de componentes principales del logaritmo en base 2 de las frecuencias por millón\")\n\n\n\n\nComo se puede apreciar las muestras de cada grupo experimental aparecen agrupadas. La mayor diferencia (a lo largo del primer componente principal) se da entre el grupo basal y los otros dos grupos. Esto indica que cuando se realice el análisis de expresión génica diferencial habrá bastantes genes con diferencias de expresión significativa entre el grupo basal y los otros dos, mientras que no habrá tantos al comparar los grupos LP y ML.\n\nOtra opción muy interesante es el paquete Glimma que permite dibujar un diagrama de componentes principales interactivo mediante la función\n\nglMDSPlot(lcpm): Dibuja un diagrama de componentes principales interactivo de la matriz de frecuencias lcpm.\n\n\nlibrary(Glimma)\n#glMDSPlot(lcpm, groups = dge$samples[,c(2,5)])\ndds &lt;- DESeqDataSetFromMatrix(\n  countData = dge$counts,\n  colData = dge$samples,\n  rowData = dge$genes,\n  design = ~group\n)\n\nconverting counts to integer mode\n\nglimmaMDS(dds)\n\n\n\n\n\n\n\n\n1.1.4 Análisis de expresión génica diferencial\nLa última etapa del análisis es la detección de los genes con una expresión significativamente diferente entre los grupos experimentales. Para ello se suelen utilizar modelos lineales o modelos lineales generalizados. En general, la estimación de los parámetros del modelo ajustado depende de la distribución teórica usada para modelizar las frecuencias de expresión génica. El paquete limma, por ejemplo, realiza un ajuste de modelo lineal suponiendo que las distribuciones de las variables implicadas son normales, mientras que el paquete edgeR modeliza las frecuencias de expresión de los genes observadas mediante la distribución binomial negativa.\nEl primer paso es definir la matriz del diseño del experimento, que define los grupos experimentales a comparar.\n\ndiseño &lt;- model.matrix(~ 0 + dge$samples$group + dge$samples$lane)\ncolnames(diseño) &lt;- gsub(\"dge\\\\$samples\\\\$group\", \"\", colnames(diseño))\ncolnames(diseño) &lt;- gsub(\"dge\\\\$samples\\\\$\", \"\", colnames(diseño))\ndiseño\n\n  Basal LP ML laneL006 laneL008\n1     0  1  0        0        0\n2     0  0  1        0        0\n3     1  0  0        0        0\n4     1  0  0        1        0\n5     0  0  1        1        0\n6     0  1  0        1        0\n7     1  0  0        1        0\n8     0  0  1        0        1\n9     0  1  0        0        1\nattr(,\"assign\")\n[1] 1 1 1 2 2\nattr(,\"contrasts\")\nattr(,\"contrasts\")$`dge$samples$group`\n[1] \"contr.treatment\"\n\nattr(,\"contrasts\")$`dge$samples$lane`\n[1] \"contr.treatment\"\n\n\nPara definir los contrastes de ajuste por pares, el paquete limma utiliza la función\n\nmakeContrast(pares)\n\n\ncontr.matrix &lt;- makeContrasts(\n   BasalvsLP = Basal-LP, \n   BasalvsML = Basal - ML, \n   LPvsML = LP - ML, \n   levels = colnames(diseño))\ncontr.matrix\n\n          Contrasts\nLevels     BasalvsLP BasalvsML LPvsML\n  Basal            1         1      0\n  LP              -1         0      1\n  ML               0        -1     -1\n  laneL006         0         0      0\n  laneL008         0         0      0\n\n\nEn general en las distribuciones de frecuencias de expresión génica, se ha observado que la varianza no es independiente de la media. Los métodos que modelizan las frecuencias mediante el modelo binomial negativo asumen una relación cuadrática entre la media y la varianza. Con el paquete limma el ajuste lineal se realiza sobre el logaritmo en base 2 de las frecuencias por millón (log-CPM) que se suponen tienen una distribución normal. La relación entre la media y la varianza se realiza automáticamente mediante la función voom.\n\npar(mfrow=c(1,2))\nv &lt;- voom(dge, diseño, plot=TRUE)\nv\n\nAn object of class \"EList\"\n$genes\n  ENTREZID SYMBOL TXCHROM\n1   497097   Xkr4    chr1\n5    20671  Sox17    chr1\n6    27395 Mrpl15    chr1\n7    18777 Lypla1    chr1\n9    21399  Tcea1    chr1\n16619 more rows ...\n\n$targets\n                                   files group lib.size norm.factors lane\n10_6_5_11 datos/GSM1545535_10_6_5_11.txt    LP 29387429    0.8943956 L004\n9_6_5_11   datos/GSM1545536_9_6_5_11.txt    ML 36212498    1.0250186 L004\npurep53     datos/GSM1545538_purep53.txt Basal 59771061    1.0459005 L004\nJMS8-2       datos/GSM1545539_JMS8-2.txt Basal 53711278    1.0458455 L006\nJMS8-3       datos/GSM1545540_JMS8-3.txt    ML 77015912    1.0162707 L006\nJMS8-4       datos/GSM1545541_JMS8-4.txt    LP 55769890    0.9217132 L006\nJMS8-5       datos/GSM1545542_JMS8-5.txt Basal 54863512    0.9961959 L006\nJMS9-P7c   datos/GSM1545544_JMS9-P7c.txt    ML 23139691    1.0861026 L008\nJMS9-P8c   datos/GSM1545545_JMS9-P8c.txt    LP 19634459    0.9839203 L008\n\n$E\n        Samples\nTags     10_6_5_11  9_6_5_11   purep53     JMS8-2    JMS8-3    JMS8-4    JMS8-5\n  497097 -4.292165 -3.856488 2.5185849  3.2931366 -4.459730 -3.994060 3.2869677\n  20671  -4.292165 -4.593453 0.3560126 -0.4073032 -1.200995 -1.943434 0.8442767\n  27395   3.876089  4.413107 4.5170045  4.5617546  4.344401  3.786363 3.8990635\n  18777   4.708774  5.571872 5.3964008  5.1623650  5.649355  5.081611 5.0602470\n  21399   4.785541  4.754537 5.3703795  5.1220551  4.869586  4.943840 5.1384776\n        Samples\nTags       JMS9-P7c  JMS9-P8c\n  497097 -3.2103696 -5.295316\n  20671  -0.3228444 -1.207853\n  27395   4.3396075  4.124644\n  18777   5.7513694  5.142436\n  21399   5.0308985  4.979644\n16619 more rows ...\n\n$weights\n          [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]\n[1,]  1.079413  1.332986 19.826915 20.273253  1.993686  1.395853 20.494977\n[2,]  1.170357  1.456380  4.804866  8.660025  3.612508  2.626870  8.760149\n[3,] 20.219073 25.573792 30.434759 28.528310 31.352260 25.743247 28.722497\n[4,] 26.947557 32.505933 33.583128 33.232125 34.231754 32.354158 33.334340\n[5,] 26.610864 28.501638 33.645479 33.206374 33.573492 31.996623 33.308490\n          [,8]      [,9]\n[1,]  1.107780  1.079413\n[2,]  3.211473  2.541942\n[3,] 21.200072 16.657930\n[4,] 30.348630 24.259801\n[5,] 25.171513 23.573305\n16619 more rows ...\n\n$design\n  Basal LP ML laneL006 laneL008\n1     0  1  0        0        0\n2     0  0  1        0        0\n3     1  0  0        0        0\n4     1  0  0        1        0\n5     0  0  1        1        0\n6     0  1  0        1        0\n7     1  0  0        1        0\n8     0  0  1        0        1\n9     0  1  0        0        1\nattr(,\"assign\")\n[1] 1 1 1 2 2\nattr(,\"contrasts\")\nattr(,\"contrasts\")$`dge$samples$group`\n[1] \"contr.treatment\"\n\nattr(,\"contrasts\")$`dge$samples$lane`\n[1] \"contr.treatment\"\n\nvfit &lt;- lmFit(v, diseño)\nvfit &lt;- contrasts.fit(vfit, contrasts=contr.matrix)\nefit &lt;- eBayes(vfit)\nplotSA(efit, main=\"Final model: Mean-variance trend\")\n\n\n\n\nA partir del modelo estimado se pueden obtener los genes subexpresados y sobreexpresados mediante el p-valor ajustado, tomando un nivel de significación del 5%.\n\nsummary(decideTests(efit))\n\n       BasalvsLP BasalvsML LPvsML\nDown        4648      4927   3135\nNotSig      7113      7026  10972\nUp          4863      4671   2517\n\n\nPara la comparación entre los niveles de expresión en basal y LP, se encontró que 4648 genes están regulados negativamente en basal en relación con LP y 4.863 genes están regulados al alza en basal en relación con LP, un total de 9.511 genes significativamente diferenciados. Por otro lado, hay un total de 9598 genes significativamente diferenciados entre basal y ML (4927 genes regulados negativamente y 4671 regulados positivamente), y un total de 5652 genes significativamente diferenciados entre LP y ML (3135 regulados negativamente y 2517 regulados positivamente).\nEn algunos análisis se puede ser más conservador utilizando el log-fold-change (log-FC).\n\ntfit &lt;- treat(vfit, lfc=1)\ndt &lt;- decideTests(tfit)\nsummary(dt)\n\n       BasalvsLP BasalvsML LPvsML\nDown        1632      1777    224\nNotSig     12976     12790  16210\nUp          2016      2057    190\n\n\nPara terminar se pueden mostrar los genes con diferencias más significativas.\n\nbasal.vs.lp &lt;- topTreat(tfit, coef=1, n=Inf)\nhead(basal.vs.lp)\n\n       ENTREZID SYMBOL TXCHROM     logFC  AveExpr         t      P.Value\n12759     12759    Clu   chr14 -5.455444 8.856581 -33.55508 1.723731e-10\n53624     53624  Cldn7   chr11 -5.527356 6.295437 -31.97515 2.576972e-10\n242505   242505  Rasef    chr4 -5.935249 5.118259 -31.33407 3.081544e-10\n67451     67451   Pkp2   chr16 -5.738665 4.419170 -29.85616 4.575686e-10\n228543   228543   Rhov    chr2 -6.264208 5.485314 -29.07484 5.782844e-10\n70350     70350  Basp1   chr15 -6.084738 5.247023 -28.26649 7.267694e-10\n          adj.P.Val\n12759  1.707586e-06\n53624  1.707586e-06\n242505 1.707586e-06\n67451  1.739242e-06\n228543 1.739242e-06\n70350  1.739242e-06\n\nbasal.vs.ml &lt;- topTreat(tfit, coef=2, n=Inf)\nhead(basal.vs.ml)\n\n       ENTREZID  SYMBOL TXCHROM     logFC  AveExpr         t      P.Value\n242505   242505   Rasef    chr4 -6.534668 5.118259 -35.08270 1.226399e-10\n53624     53624   Cldn7   chr11 -5.495888 6.295437 -31.68918 2.774140e-10\n12521     12521    Cd82    chr2 -4.690834 7.069637 -31.43063 2.913572e-10\n20661     20661   Sort1    chr3 -4.931660 6.704459 -30.70113 3.558720e-10\n71740     71740 Nectin4    chr1 -5.581283 5.164967 -30.59775 3.718157e-10\n12759     12759     Clu   chr14 -4.686826 8.856581 -27.95760 7.687544e-10\n          adj.P.Val\n242505 1.236213e-06\n53624  1.236213e-06\n12521  1.236213e-06\n20661  1.236213e-06\n71740  1.236213e-06\n12759  1.480434e-06\n\n\n\nglimmaMA(tfit, coef=1, status=dt, main=colnames(tfit)[1],\n         side.main=\"ENTREZID\", counts=lcpm, groups=dge$samples$group)\n\nExternal counts supplied using counts argument will be transformed to log-cpm by default. Specify transform.counts='none' to override transformation.\n\n\nWarning in buildXYData(table, status, main, display.columns, anno, counts, :\ncount transform requested but not all count values are integers.\n\n\n\n\n\n\n\nEl mismo ajuste se puede realizar con el paquete edgeR.\n\ndge &lt;- estimateDisp(dge, diseño)\ngfit &lt;- glmFit(dge, diseño)\nglrt &lt;- glmLRT(gfit, diseño, contrast = contr.matrix)\n\n\n#glimmaMA(glrt, dge = dge)\n\nY el volcano plot\n\nglimmaVolcano(efit, dge = dge)"
  },
  {
    "objectID": "01-rna-seq.html#análisis-de-expresión-génica-diferencial-con-desseq2",
    "href": "01-rna-seq.html#análisis-de-expresión-génica-diferencial-con-desseq2",
    "title": "1  Análisis de expresión génica diferencial (RNA-Seq)",
    "section": "1.2 Análisis de expresión génica diferencial con DesSeq2",
    "text": "1.2 Análisis de expresión génica diferencial con DesSeq2\nEl paquete DESeq2 utiliza la estructura de datos DESeqDataSet para guardar la matriz de frecuencias de expresión génica. Para crear esta estructura se pueden utilizar las siguientes funciones\n\nDESeqDataSetFromMatrix(countData = frec, colData = grupo): Crea una estructura del tipo DESeqDataSet con la matriz de frecuencias de expresión génica frec (con genes en filas y muestras en columnas), y el data frame grupo con los grupos experimentales a los que pertenecen las muestras analizadas en las columnas de la matriz de frecuencias.\n\n\n#library(DESeq2)\n#dds &lt;- DESeqDataSetFromMatrix(countData = frec, colData = dge$samples$group, design = ~ group)\n#dds"
  },
  {
    "objectID": "01-rna-seq.html#referencias",
    "href": "01-rna-seq.html#referencias",
    "title": "1  Análisis de expresión génica diferencial (RNA-Seq)",
    "section": "1.3 Referencias",
    "text": "1.3 Referencias\n\nOrchestrating Single-Cell Analysis with Bioconductor. (s. f.). Recuperado 12 de junio de 2023, de https://github.com/LTLA/OSCA\nLaw, Charity, et al. RNA-seq analysis is easy as 1-2-3 with limma, Glimma and edgeR."
  }
]